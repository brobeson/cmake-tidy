#!/usr/bin/env python3

import argparse
import ct_core
import logging
import os
import sys

__version__ = '0.0.0'

def exit_if_arguments_are_invalid(arguments):
    for f in arguments['files']:
        if not os.path.isfile(f):
            logging.error(f + ' does not exist.')
            sys.exit(1)

def make_parser():
    parser = argparse.ArgumentParser(
        description='Analyze CMake scripts for formatting and style mistakes.',)
    parser.add_argument('--config',
        help='Specify a cmake-tidy configuration file. The file must be YAML. '
            'If omitted, the application attempts to load a .cmake-tidy file '
            'from the closest parent directory of the CMake file to be '
            'scanned.',
        nargs=1,
        default='')
    parser.add_argument('--version',
        action='version',
        version=__version__,
        help='Display the version, and exit.')
    parser.add_argument('files',
        default=['./CMakeLists.txt'],
        nargs='*',
        help='The CMake files to analyze. The default is ./CMakeLists.txt')
    return parser

if __name__ == '__main__':
    logging.basicConfig(
        level=logging.INFO,
        format='{levelname} {message}',
        style='{')
    parser = make_parser()
    arguments = vars(parser.parse_args())
    exit_if_arguments_are_invalid(arguments)
    ct_core.find_cmake_tidy_configuration(arguments['files'][0])
    sys.exit()
